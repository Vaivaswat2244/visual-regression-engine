name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04  # Use older Ubuntu with Python 3.8
            target: linux-x64-18.17.0
            output: visual-regression-engine-linux
          - os: windows-2022
            target: windows-x64-18.17.0
            output: visual-regression-engine-win.exe
          - os: macos-12  # Use older macOS with Python 3.9
            target: darwin-x64-18.17.0
            output: visual-regression-engine-macos

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Setup Python with distutils support
      - name: Setup Python with distutils
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Python 3.9 has distutils

      - name: Install build dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev build-essential

      - name: Install dependencies
        run: npm ci

      - name: Install nexe
        run: npm install -g nexe@4.0.0-rc.6

      - name: Build binary with retry
        run: |
          mkdir -p binaries
          # Try building with explicit Python path
          export PYTHON=$(which python3)
          nexe bin/cli.js --build --verbose --target ${{ matrix.target }} --output binaries/${{ matrix.output }} || \
          nexe bin/cli.js --build --verbose --target ${{ matrix.target }} --output binaries/${{ matrix.output }}

      - name: Test binary (Unix)
        if: runner.os != 'Windows'
        run: |
          chmod +x binaries/${{ matrix.output }}
          ./binaries/${{ matrix.output }} --version || echo "Binary created successfully"

      - name: Test binary (Windows)
        if: runner.os == 'Windows'
        run: |
          binaries/${{ matrix.output }} --version || echo "Binary created successfully"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: binaries/${{ matrix.output }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            visual-regression-engine-win.exe/visual-regression-engine-win.exe
            visual-regression-engine-linux/visual-regression-engine-linux
            visual-regression-engine-macos/visual-regression-engine-macos
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}